// ********RoostGPT********
/*
Test generated by RoostGPT for test junit4-petstore using AI Type  and AI Model

ROOST_METHOD_HASH=getLastName_026f18c38b
ROOST_METHOD_SIG_HASH=getLastName_4814a2dee7

Scenario 1: Test to check if getLastName() returns the correct last name

Details:
  TestName: testGetLastNameReturnsCorrectLastName
  Description: This test aims to verify if the getLastName() method correctly returns the last name of the Customer. The method is expected to return the last name that has been set previously using setLastName() method.
Execution:
  Arrange: Create a Customer object and set the last name using setLastName() method.
  Act: Invoke the getLastName() method on the Customer object.
  Assert: Assert that the returned last name is equal to the last name that was set.
Validation:
  This assertion verifies that the getLastName() method correctly returns the last name of the Customer. This is important as it ensures that the correct last name is retrieved for the Customer, which is crucial for displaying or processing customer information.

Scenario 2: Test to check if getLastName() returns null when no last name is set

Details:
  TestName: testGetLastNameReturnsNullWhenNoLastNameIsSet
  Description: This test is meant to verify if the getLastName() method returns null when no last name has been set for the Customer.
Execution:
  Arrange: Create a Customer object without setting a last name.
  Act: Invoke the getLastName() method on the Customer object.
  Assert: Assert that the returned last name is null.
Validation:
  This assertion checks if the getLastName() method returns null when no last name is set for the Customer. This is essential to ascertain that the method handles the scenario where no last name is set, and does not throw an exception or return an incorrect value.

Scenario 3: Test to check if getLastName() returns the correct last name after it has been updated

Details:
  TestName: testGetLastNameReturnsUpdatedLastName
  Description: This test is designed to check if the getLastName() method returns the updated last name after it has been changed using the setLastName() method.
Execution:
  Arrange: Create a Customer object and set the last name. Then, update the last name using the setLastName() method.
  Act: Invoke the getLastName() method on the Customer object.
  Assert: Assert that the returned last name is equal to the updated last name.
Validation:
  This assertion ensures that the getLastName() method correctly returns the updated last name of the Customer. This is crucial to confirm that the method reflects changes made to the Customer's last name, which is important for maintaining accurate and up-to-date customer information.
*/

// ********RoostGPT********

package org.agoncal.application.petstore.model;

import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.agoncal.application.petstore.model.Customer;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import org.agoncal.application.petstore.constraints.Email;
import org.agoncal.application.petstore.constraints.Login;
import javax.persistence.*;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Past;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import java.io.Serializable;
import java.security.MessageDigest;
import java.util.*;

public class CustomerGetLastNameTest {

	@Test
	@Category(Categories.valid.class)
	public void testGetLastNameReturnsCorrectLastName() {
		// Arrange
		Customer customer = new Customer();
		customer.setLastName("Doe");
		// Act
		String actualLastName = customer.getLastName();
		// Assert
		assertEquals("Doe", actualLastName);
	}

	@Test
	@Category(Categories.valid.class)
	public void testGetLastNameReturnsNullWhenNoLastNameIsSet() {
		// Arrange
		Customer customer = new Customer();
		// Act
		String actualLastName = customer.getLastName();
		// Assert
		assertNull(actualLastName);
	}

	@Test
	@Category(Categories.valid.class)
	public void testGetLastNameReturnsUpdatedLastName() {
		// Arrange
		Customer customer = new Customer();
		customer.setLastName("Doe");
		customer.setLastName("Smith");
		// Act
		String actualLastName = customer.getLastName();
		// Assert
		assertEquals("Smith", actualLastName);
	}

}